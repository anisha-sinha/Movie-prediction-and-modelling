library(ggplot2)
library(dplyr)
library(statsr)
#load("movies.Rdata")
load("/Users/anisha/Downloads/Anisha/New project/movies.Rdata")
library(ggplot2)
library(dplyr)
library(statsr)
#load("movies.Rdata")
my_data <- movies[c("title_type", "genre", "runtime", "mpaa_rating", "imdb_rating", "critics_rating", "critics_score", "audience_rating", "audience_score", "best_dir_win", "top200_box")] %>% na.omit()
summary(my_data)
ggplot(data=my_data, aes(y= audience_score, x=title_type, fill=title_type ) ) + geom_boxplot() + ggtitle("Audience Score vs Title type") +  ylab("Audience Score") + xlab("Type of Title") + scale_fill_manual(values = c("#9c869f",
"#f77e8a", "#ffa600"))
ggplot(data=my_data, aes(y= audience_score, x=genre, fill=genre ) ) + geom_boxplot() + ggtitle("Audience Score vs Genre") +  xlab("Genre") + ylab("Audience Score") + scale_fill_manual(values = c("#846B87", "#9c869f", "#b585a5", "#d281a1", "#ec7e94", "#ff7f7e", "#ff8562", "#ff933f", "#ffa600", "#ffc375", "#fbe1c7")) + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data=my_data, aes(y= audience_score, x=mpaa_rating, fill=mpaa_rating ) ) + geom_boxplot() + ggtitle("Audience Score vs MPAA Rating") +  xlab("MPAA Rating") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f", "#c183a5", "#e77f97", "#ff8079", "#ff8d4e", "#ffa600")) + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data=my_data, aes(y= audience_score, x=critics_rating, fill=critics_rating ) ) + geom_boxplot() + ggtitle("Audience Score vs Critics Rating") +  xlab("Critics Rating") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f",
"#f77e8a", "#ffa600"))
ggplot(data=my_data, aes(y= audience_score, x=audience_rating, fill=audience_rating ) ) + geom_boxplot() + ggtitle("Audience Score vs Audience Rating") +  xlab("Audience Rating") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f", "#ffa600"))
ggplot(data=my_data, aes(y= audience_score, x=best_dir_win, fill=best_dir_win ) ) + geom_boxplot() + ggtitle("Audience Score vs Best Director") +  xlab("Best Director") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f", "#ffa600"))
ggplot(data=my_data, aes(y= audience_score, x=top200_box, fill=top200_box ) ) + geom_boxplot() + ggtitle("Audience Score vs Top 200") +  xlab("Top 200") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f", "#ffa600"))
ggplot(data = my_data, aes(x = runtime, y = audience_score)) +
geom_jitter() + geom_smooth(method = "lm", se = FALSE) +  xlab("Runtime") + ylab("Audience Score") + ggtitle("Audience Score vs Runtime")
ggplot(data = my_data, aes(x = imdb_rating, y = audience_score)) +
geom_jitter() + geom_smooth(method = "lm", se = FALSE) +  xlab("IMDB Rating") + ylab("Audience Score") + ggtitle("Audience Score vs IMDB Rating")
ggplot(data = my_data, aes(x = critics_score, y = audience_score)) +
geom_jitter() + geom_smooth(method = "lm", se = FALSE) +  xlab("Critics Score") + ylab("Audience Score") + ggtitle("Audience Score vs Critics Score")
model<-lm(audience_score~.,data=my_data)
summary(model)
pars_model<-step(model, direction = "both", trace=FALSE )
summary(pars_model)
pars_model
ggplot(data = pars_model, aes(sample = .resid)) +
stat_qq()
ggplot(data = pars_model, aes(x = .resid)) +
geom_histogram(binwidth = 1, fill='#9c869f', color='black') +
xlab("Residuals")
ggplot(data = pars_model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
genre <- "Action & Adventure"
runtime <- 106
imdb_rating <- 7.9
critics_score <- 93
audience_rating <- "Upright"
Dunkirk <- data.frame (genre, runtime, imdb_rating, critics_score, audience_rating)
predict(pars_model, Dunkirk)
predict(pars_model, Dunkirk, interval = "prediction", level = 0.95)
my_data <- movies[c("title_type", "genre", "runtime", "mpaa_rating", "imdb_rating", "critics_rating", "critics_score", "audience_rating", "audience_score", "best_dir_win", "top200_box")] %>% na.omit()
my_data <- movies[c("title_type", "genre", "runtime", "mpaa_rating", "imdb_rating", "critics_rating", "critics_score", "audience_rating", "audience_score", "best_dir_win", "top200_box")]
#load("movies.Rdata")
load("movies.Rdata")
my_data <- movies[c("title_type", "genre", "runtime", "mpaa_rating", "imdb_rating", "critics_rating", "critics_score", "audience_rating", "audience_score", "best_dir_win", "top200_box")]
library(ggplot2)
library(dplyr)
library(statsr)
load("movies.Rdata")
my_data <- movies[c("title_type", "genre", "runtime", "mpaa_rating", "imdb_rating", "critics_rating", "critics_score", "audience_rating", "audience_score", "best_dir_win", "top200_box")] %>% na.omit()
summary(my_data)
ggplot(data=my_data, aes(y= audience_score, x=title_type, fill=title_type ) ) + geom_boxplot() + ggtitle("Audience Score vs Title type") +  ylab("Audience Score") + xlab("Type of Title") + scale_fill_manual(values = c("#9c869f",
"#f77e8a", "#ffa600"))
ggplot(data=my_data, aes(y= audience_score, x=genre, fill=genre ) ) + geom_boxplot() + ggtitle("Audience Score vs Genre") +  xlab("Genre") + ylab("Audience Score") + scale_fill_manual(values = c("#846B87", "#9c869f", "#b585a5", "#d281a1", "#ec7e94", "#ff7f7e", "#ff8562", "#ff933f", "#ffa600", "#ffc375", "#fbe1c7")) + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data=my_data, aes(y= audience_score, x=mpaa_rating, fill=mpaa_rating ) ) + geom_boxplot() + ggtitle("Audience Score vs MPAA Rating") +  xlab("MPAA Rating") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f", "#c183a5", "#e77f97", "#ff8079", "#ff8d4e", "#ffa600")) + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data=my_data, aes(y= audience_score, x=critics_rating, fill=critics_rating ) ) + geom_boxplot() + ggtitle("Audience Score vs Critics Rating") +  xlab("Critics Rating") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f",
"#f77e8a", "#ffa600"))
ggplot(data=my_data, aes(y= audience_score, x=audience_rating, fill=audience_rating ) ) + geom_boxplot() + ggtitle("Audience Score vs Audience Rating") +  xlab("Audience Rating") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f", "#ffa600"))
ggplot(data=my_data, aes(y= audience_score, x=best_dir_win, fill=best_dir_win ) ) + geom_boxplot() + ggtitle("Audience Score vs Best Director") +  xlab("Best Director") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f", "#ffa600"))
ggplot(data=my_data, aes(y= audience_score, x=top200_box, fill=top200_box ) ) + geom_boxplot() + ggtitle("Audience Score vs Top 200") +  xlab("Top 200") + ylab("Audience Score") + scale_fill_manual(values = c("#9c869f", "#ffa600"))
ggplot(data = my_data, aes(x = runtime, y = audience_score)) +
geom_jitter() + geom_smooth(method = "lm", se = FALSE) +  xlab("Runtime") + ylab("Audience Score") + ggtitle("Audience Score vs Runtime")
ggplot(data = my_data, aes(x = imdb_rating, y = audience_score)) +
geom_jitter() + geom_smooth(method = "lm", se = FALSE) +  xlab("IMDB Rating") + ylab("Audience Score") + ggtitle("Audience Score vs IMDB Rating")
ggplot(data = my_data, aes(x = critics_score, y = audience_score)) +
geom_jitter() + geom_smooth(method = "lm", se = FALSE) +  xlab("Critics Score") + ylab("Audience Score") + ggtitle("Audience Score vs Critics Score")
model<-lm(audience_score~.,data=my_data)
summary(model)
model<-lm(audience_score~.,data=my_data)
summary(model)
pars_model<-step(model, direction = "both", trace=FALSE )
summary(pars_model)
pars_model
ggplot(data = pars_model, aes(sample = .resid)) +
stat_qq()
ggplot(data = pars_model, aes(x = .resid)) +
geom_histogram(binwidth = 1, fill='#9c869f', color='black') +
xlab("Residuals")
ggplot(data = pars_model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
genre <- "Action & Adventure"
runtime <- 106
imdb_rating <- 7.9
critics_score <- 93
audience_rating <- "Upright"
Dunkirk <- data.frame (genre, runtime, imdb_rating, critics_score, audience_rating)
predict(pars_model, Dunkirk)
predict(pars_model, Dunkirk, interval = "prediction", level = 0.95)
